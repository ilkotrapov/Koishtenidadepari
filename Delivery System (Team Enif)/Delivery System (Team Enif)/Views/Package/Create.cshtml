@model PackageViewModel

@{
    ViewData["Title"] = "Create Package";
    //var isAdmin = User.IsInRole("Admin");
    //var isOfficeAssistant = User.IsInRole("Office assistant");
    // if (user is Admin or Office assistant) removed.


    /* <!-- Price Display -->
    <div id="priceDisplay" style="display:none;">
        <h4>Total Price: €<span id="totalPrice"></span></h4>

        <!-- Stripe Card Element -->
        <div id="card-element" style="margin: 20px 0;"></div>

        <!-- Payment Options -->
        <button id="payNowButton" class="btn btn-success" onclick="initiatePayment()">💳 Pay Now</button>
        <button id="invoiceButton" class="btn btn-info" onclick="sendInvoice()">📧 Request Invoice</button>
    </div>
    */
}
  
@{
   /*  Payment js. Has to fix HTML logic.       
    * 
    * <script src="https://js.stripe.com/v3/"></script>
    <script>
    const stripe = Stripe("pk_test_51QoNsEAWoKegr6mtRVRle0aQNkZNn8opfkX8zJvQ4tBIC4yPXsUisYo5kLO5uJloC5geOv948B1XUUN7Chhpeyv6002AE0iPth"); // test publishable key
    const elements = stripe.elements();
    const cardElement = elements.create('card');
    cardElement.mount('#card-element');

    // Show modal when clicking Order Now
    document.getElementById('orderButton').addEventListener('click', () => {
    document.getElementById('paymentModal').style.display = 'block';
    });

    // Calculate price based on input
        function calculatePrice() {
        const length = parseFloat(document.getElementById('length').value);
        const width = parseFloat(document.getElementById('width').value);
        const height = parseFloat(document.getElementById('height').value);
        const weight = parseFloat(document.getElementById('weight').value);

        // Simple pricing formula
        const basePrice = 10; // Base fee
        const weightFee = weight * 5; // €2 per kg
        const volumeFee = (length * width * height) / 2000; // €0.50 per 1000 cm³

        const totalPrice = (basePrice + weightFee + volumeFee).toFixed(2);

        document.getElementById('totalPrice').innerText = totalPrice;
    document.getElementById('priceDisplay').style.display = 'block';
        }

        // Initiate Stripe Payment
        async function initiatePayment() {
        const amount = parseFloat(document.getElementById('totalPrice').innerText) * 100; // cents

        const response = await fetch('/api/payment/create-checkout-session', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ amount: amount })
        });

        const { sessionUrl } = await response.json();
    window.location.href = sessionUrl; // Redirect to Stripe Checkout
        }

        // Send Invoice via Stripe API
        async function sendInvoice() {
        const email = prompt("Enter email for invoice:");
            if (email) {
                const response = await fetch('/api/payment/send-invoice', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ email: email })
            });

            const result = await response.json();
                if (result.success) {
                alert(`Invoice sent to ${email}`);
                } else {
            alert("Invoice failed: " + result.message);
     }
     }
     }
    </script>
    */

}


@{
    <div class="card mb-4 shadow-sm">
        <div class="card-header">
            <h4 class="display-4 text-center text-primary">New Package</h4>
        </div>
        <div class="row card-body">
            <div class="col-md-8 offset-md-2">
                <form asp-controller="Package" asp-action="CreateConfirm" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                    <div class="form-section">
                        <div class="form-group">
                            <label asp-for="SenderName" class="control-label"></label>
                            <input asp-for="SenderName" class="form-control" />
                            <span asp-validation-for="SenderName" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="SenderAddress" class="control-label"></label>
                            <textarea asp-for="SenderAddress" class="form-control" ></textarea>
                            <span asp-validation-for="SenderAddress" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-section">
                        <div class="form-group">
                            <label asp-for="RecipientName" class="control-label"></label>
                            <input asp-for="RecipientName" class="form-control" />
                            <span asp-validation-for="RecipientName" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="RecipientAddress" class="control-label"></label>
                            <textarea asp-for="RecipientAddress" class="form-control" ></textarea>
                            <span asp-validation-for="RecipientAddress" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-section">
                        <div class="form-group">
                            <label asp-for="Length" class="control-label"></label>
                            <input type="number" asp-for="Length" class="form-control" oninput="calculatePackageSize();" />
                            <span asp-validation-for="Length" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Width" class="control-label"></label>
                            <input type="number" asp-for="Width" class="form-control" oninput="calculatePackageSize();" />
                            <span asp-validation-for="Width" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Hight" class="control-label"></label>
                            <input type="number" asp-for="Hight" class="form-control" oninput="calculatePackageSize();" />
                            <span asp-validation-for="Hight" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="PackageSize" class="control-label"></label>
                            <input type="number" asp-for="PackageSize" class="form-control" readonly />
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="Weight" class="control-label"></label>
                        <input type="number" asp-for="Weight" class="form-control" />
                        <span asp-validation-for="Weight" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="DeliveryOptionId" class="control-label">Delivery Option</label>
                        @Html.DropDownListFor(m => m.DeliveryOptionId, new SelectList(Model.DeliveryOptions, "Value", "Text", Model.DeliveryOptionId), new { @class = "form-control" })
                        <span asp-validation-for="DeliveryOptionId" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="DeliveryTypeId" class="control-label">Delivery Type</label>
                        @Html.DropDownListFor(m => m.DeliveryTypeId, new SelectList(Model.DeliveryTypes, "Value", "Text", Model.DeliveryTypeId), new { @class = "form-control" })
                        <span asp-validation-for="DeliveryTypeId" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="DeliveryDate" class="control-label" ></label>
                        <input asp-for="DeliveryDate" class="form-control" />
                        <span a""sp-validation-for="DeliveryDate" class="text-danger"></span>
                    </div>

                    <div class="card-footer text-center">
                       <input type="submit" value="Create" class="btn btn-primary" />
                       <a asp-action="Index" class="btn btn-secondary">
                            <i class="fas fa-list"></i>Cancel
                        </a>
                    </div> 
                </form>
            </div>
        </div>
    </div>
  }          

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}